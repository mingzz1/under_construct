<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mingzzi</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://192.168.64.129:4000/</link>
    <description>mingzzi's blog</description>
    <pubDate>Sat, 12 Sep 2020 17:49:10 +0900</pubDate>
    
      <item>
        <title>[OWASP-MSTG] Crackmes - Uncrackable level 1 Write-up</title>
        <link>/wargame/owasp/2020/09/10/owasp_uncrackable1_write-up.html</link>
        <guid isPermaLink="true">/wargame/owasp/2020/09/10/owasp_uncrackable1_write-up.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OWASP&lt;/code&gt;에 모바일 어플리케이션 &lt;code class=&quot;highlighter-rouge&quot;&gt;Crackme&lt;/code&gt;가 있다고 해서 풀어보았다.&lt;/p&gt;

&lt;p&gt;첫 번째로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Android Uncrackable level 1&lt;/code&gt;	이다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;문제는 아래 링크에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/OWASP/owasp-mstg/tree/master/Crackmes&quot;&gt;OWASP-MSTG&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Android/Level_01&lt;/code&gt; 폴더에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;UnCrackable-Level1.apk&lt;/code&gt;를 다운받아 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;로 열어 보았다. (apk 파일을 Drag&amp;amp;Drop로 에뮬레이터에 넣으면 설치할 수 있다.)&lt;/p&gt;

&lt;p&gt;열어 보니, &lt;code class=&quot;highlighter-rouge&quot;&gt;Root detected!&lt;/code&gt; 라는 알림창이 뜬다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/01.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;루팅 탐지가 있는 것 같아 먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;jadx-gui&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt; 파일을 열어보았다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Uncrackable1&lt;/code&gt; 패키지의 &lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity&lt;/code&gt; 코드는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uncrackable1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.Activity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.app.AlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.DialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.view.View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.widget.EditText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;owasp.mstg.uncrackable1.R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sg.vantagepoint.a.b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sg.vantagepoint.a.c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This is unacceptable. The app is now going to exit.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCancelable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* access modifiers changed from: protected */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Root detected!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;App is debuggable!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;edit_text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Success!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This is the correct secret.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nope...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That's not it. Try again.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dismiss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;맨 위의 &lt;code class=&quot;highlighter-rouge&quot;&gt;a()&lt;/code&gt; 메소드는 제목에 인자인 &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;을, 본문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;This is unacceptable. The app is now going to exit.&lt;/code&gt;이 있는 알림창을 띄우고, 해당 알림창에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt; 클릭 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;System.exit(0)&lt;/code&gt;를 호출 해 어플리케이션을 종료시킨다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;onCreate&lt;/code&gt;를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;c.a()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;c.b()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;c.c()&lt;/code&gt; 메소드 호출 후 하나라도 참이라면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Root detected!&lt;/code&gt;를 인자로 앞서 확인한 &lt;code class=&quot;highlighter-rouge&quot;&gt;a()&lt;/code&gt; 메소드를 호출한다.&lt;/p&gt;

&lt;p&gt;또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;b.a()&lt;/code&gt; 메소드 호출 결과가 참일 경우에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;App is debuggable!&lt;/code&gt;를 인자로 &lt;code class=&quot;highlighter-rouge&quot;&gt;a()&lt;/code&gt; 메소드를 호출하기 때문에 해당 함수들을 확인하여 우회해야 앱을 실행시킬 수 있다.&lt;/p&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;b.a()&lt;/code&gt; 메소드의 코드부터 확인 해 보면 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.content.Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getApplicationInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;context.getApplicationContext().getApplicationInfo().flags&lt;/code&gt;는 어플리케이션의 &lt;code class=&quot;highlighter-rouge&quot;&gt;디버깅 모드 여부&lt;/code&gt;를 가져오는 코드이며, &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;디버깅 모드&lt;/code&gt;를 의미한다.&lt;/p&gt;

&lt;p&gt;즉, 어플리케이션이 디버깅 모드일 경우 어플리케이션을 종료한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;c.a()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;c.b()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;c.c()&lt;/code&gt;의 코드는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.os.Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PATH&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;su&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test-keys&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/system/app/Superuser.apk&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/system/xbin/daemonsu&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/system/etc/init.d/99SuperSUDaemon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/system/bin/.ext/.su&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/system/etc/.has_su_daemon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/system/etc/.installed_su_daemon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/dev/com.koushikdutta.superuser.daemon/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드는 기기의 루팅 여부를 확인하는 코드이다.&lt;/p&gt;

&lt;p&gt;기기가 루팅이 되어있을 경우 어플리케이션을 종료하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Frida&lt;/code&gt;를 사용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;루팅 탐지 우회&lt;/code&gt;를 해야한다.&lt;/p&gt;

&lt;p&gt;루팅 탐지 우회를 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Frida&lt;/code&gt; 코드는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;owasp.mstg.uncrackable1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
console.log(&quot;[+] Start Script&quot;);

	Java.perform(function() {
		console.log(&quot;[+] Hooking System.exit&quot;);
		var exitClass = Java.use(&quot;java.lang.System&quot;);
		exitClass.exit.implementation = function() {
			console.log(&quot;[+] System.exit called&quot;);
		}
	});
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_usb_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] Running Hook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Frida 사용법&lt;/code&gt;은 아래 링크에서 확인할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://mingzz1.github.io/pentesting/android/2020/09/09/frida_install_for_android.html&quot;&gt;[Android] Frida 사용 및 Hooking 방법&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;어플리케이션 종료는 알림창의 &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt; 버튼을 눌러야 실행되므로, 어플리케이션 실행 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Frida&lt;/code&gt; 코드를 실행시키고, &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt; 버튼을 누르면 우회를 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/03.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;루팅 탐지 우회를 하고 확인 해 보면 어떤 입력 창이 나타난다.&lt;/p&gt;

&lt;p&gt;해당 입력창에 값을 입력하면 아래와 같이 알림창이 나타난다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/04.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;앞서 확인했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;MainActivity&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;verify()&lt;/code&gt; 메소드가 실행 된 것이다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;edit_text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AlertDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Success!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This is the correct secret.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nope...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That's not it. Try again.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DialogInterface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dialogInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dismiss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;verify()&lt;/code&gt; 메소드는 입력 값을 받은 뒤, 입력받은 값을 인자로 &lt;code class=&quot;highlighter-rouge&quot;&gt;a.a()&lt;/code&gt; 메소드를 호출하여 반환값이 참일 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;Success&lt;/code&gt;를 제목으로, &lt;code class=&quot;highlighter-rouge&quot;&gt;This is the correct secret.&lt;/code&gt;를 본문으로 하는 알림창을, 반환값이 거짓 일 경우에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nope...&lt;/code&gt;을 제목으로, &lt;code class=&quot;highlighter-rouge&quot;&gt;That's not it. Try again.&lt;/code&gt;를 본문으로 하는 알림창을 띄운다.&lt;/p&gt;

&lt;p&gt;즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;Success&lt;/code&gt;를 나타나게 하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;어떠한 입력 값을 찾아야 하는 문제&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;어떻게 비교를 하는지 알기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;a.a()&lt;/code&gt; 메소드를 확인 해 보았다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uncrackable1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;android.util.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;8d127684cbc37c17616d806cf50473cc&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5UJiFctbmgbDoLXmpL12mkno8HT4Lv8dlat8FxR2GOc=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CodeCheck&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AES error:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)];&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;digit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;digit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8d127684cbc37c17616d806cf50473cc&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;b()&lt;/code&gt; 메소드에 넣은 반환값과 &lt;code class=&quot;highlighter-rouge&quot;&gt;5UJiFctbmgbDoLXmpL12mkno8HT4Lv8dlat8FxR2GOc=&lt;/code&gt;를 Base64 Decode한 값을 인자로 &lt;code class=&quot;highlighter-rouge&quot;&gt;sg.vantagepoint.a.a.a()&lt;/code&gt; 메소드를 호출하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;bArr&lt;/code&gt;에 저장한다.&lt;/p&gt;

&lt;p&gt;그 후 아래에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;bArr&lt;/code&gt;과 입력한 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt;를 통해 비교한 결과값을 반환한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sg.vantagepoint.a.a.a()&lt;/code&gt; 메소드는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vantagepoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.crypto.Cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.crypto.spec.SecretKeySpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bArr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SecretKeySpec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKeySpec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecretKeySpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AES/ECB/PKCS7Padding&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AES&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKeySpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doFinal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bArr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;AES Decrypt&lt;/code&gt;를 하는 함수이다.(&lt;code class=&quot;highlighter-rouge&quot;&gt;instance.init(2, secretKeySpec)&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;DECRYPT_MODE&lt;/code&gt;를 의미함)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;문제를 풀기 위해서는 Hooking을 통해 반환값을 확인해야 할 것 같다.&lt;/p&gt;

&lt;p&gt;나는 두 가지 방법으로 풀었다.&lt;/p&gt;

&lt;p&gt;처음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt;를 Hooking 해 값을 확인했으나, 너무 많은 값이 나와 &lt;code class=&quot;highlighter-rouge&quot;&gt;정확한 secret&lt;/code&gt;이 무엇인지 알아내기가 힘들었다.&lt;/p&gt;

&lt;p&gt;그래서 그 다음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;sg.vantagepoint.a.a.a()&lt;/code&gt;를 Hooking 하여 비교 대상의 값이 무엇인지를 확인했다.&lt;/p&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt;를 Hooking하는 코드는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;owasp.mstg.uncrackable1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
console.log(&quot;[+] Start Script&quot;);

	Java.perform(function() {
		console.log(&quot;[+] Hooking System.exit&quot;);
		var exitClass = Java.use(&quot;java.lang.System&quot;);
		exitClass.exit.implementation = function() {
			console.log(&quot;[+] System.exit called&quot;);
		}
	});

	Java.perform(function() {
		console.log(&quot;[+] Hooking str.equals&quot;);
		var equalClass = Java.use(&quot;java.lang.String&quot;);
		equalClass.equals.implementation = function(arg1) {
			console.log(arg1);
			return true;
		}
	});
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_usb_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] Running Hook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드 실행 결과 아래와 같이 여러 값을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데 정확히 어떤 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;secret&lt;/code&gt;인지 알기 힘들어 &lt;del&gt;하나하나 입력 해 보면 되겠지만&lt;/del&gt; 이번에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;sg.vantagepoint.a.a.a()&lt;/code&gt;를 Hooking하도록 구현했다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;owasp.mstg.uncrackable1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
console.log(&quot;[+] Start Script&quot;);

	Java.perform(function() {
		console.log(&quot;[+] Hooking System.exit&quot;);
		var exitClass = Java.use(&quot;java.lang.System&quot;);
		exitClass.exit.implementation = function() {
			console.log(&quot;[+] System.exit called&quot;);
		}
	});

	Java.perform(function() {
		console.log(&quot;[+] Hooking sg.vantagepoint.a.a&quot;);
		var aClass = Java.use(&quot;sg.vantagepoint.a.a&quot;);
		aClass.a.implementation = function(arg1, arg2) {
			var retval = this.a(arg1, arg2);
			var flag = &quot;&quot;;

			for(var i = 0; i &amp;lt; retval.length; i ++) {
				flag += String.fromCharCode(retval[i]);
			}

			console.log(flag);
			return retval;
		}
	});
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_usb_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] Running Hook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드 실행 결과 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;secret&lt;/code&gt;값을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/owasp-mstg/android/level1/08.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Android] Frida 사용 및 Hooking 방법</title>
        <link>/pentesting/android/2020/09/09/frida_install_for_android.html</link>
        <guid isPermaLink="true">/pentesting/android/2020/09/09/frida_install_for_android.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Frida&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; 기반의 라이브러리로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Native App&lt;/code&gt;에 대한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hooking&lt;/code&gt;을 통해 어플리케이션을 분석할 수 있게 해 주는 툴이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JS Injection&lt;/code&gt;을 이용하며, &lt;code class=&quot;highlighter-rouge&quot;&gt;Android&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS&lt;/code&gt;에 많이 사용하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;MacOS&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Linux&lt;/code&gt; 등 다른 플랫폼에서도 사용할 수 있다고 한다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Frida&lt;/code&gt;를 사용하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;를 안드로이드 기기에서 실행해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;를 안드로이드 기기에 넣을때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;를 사용했는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;를 설치하면 설치 경로에 자동으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;도 설치되어 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/frida-setting/01.png&quot; alt=&quot;&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내 경우, 설치 경로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Program Files\Nox\bin&lt;/code&gt; 였다.&lt;/p&gt;

&lt;p&gt;이 경로를 &lt;code class=&quot;highlighter-rouge&quot;&gt;시스템 환경 변수 &amp;gt; 환경 변수 &amp;gt; Path&lt;/code&gt;에 아래와 같이 저장 해 두면 아무 경로에서나 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 실행시킬 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/frida-setting/02.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/frida-setting/03.png&quot; alt=&quot;&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;창을 열어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 입력했을 때 아래와 같이 출력되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 실행시킬 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/frida-setting/04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;는 아래 링크에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/frida/frida/releases&quot;&gt;Frida Github&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;링크 접속 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;로 검색하면 여러 파일이 나온다.&lt;/p&gt;

&lt;p&gt;이 중 자신의 기기 환경에 맞는 파일을 다운받으면 된다.&lt;/p&gt;

&lt;p&gt;안드로이드 에뮬레이터의 비트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; 창에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb shell&lt;/code&gt;을 통해 기기에 접속 후 아래의 명령어를 입력하여 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;adb shell
root@shamu:/ # getprop ro.product.cpu.abi
x86
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;내 경우 에뮬레이터의 비트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;x86&lt;/code&gt; 이어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server-12.11.12-android-x86.xz&lt;/code&gt;를 다운받았다.&lt;/p&gt;

&lt;p&gt;다운받은 파일 압축을 풀고 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb push&lt;/code&gt;를 사용하여 기기에 넣어주면 된다.(나는 편의상 이름을 변경했다.)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;adb push [local_file_path] [remote_directory_to_push_file]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;adb push ./frida-server /data/local/tmp/
[100%] /data/local/tmp/frida-server

&amp;gt;adb shell
root@shamu:/ # cd /data/local/tmp
root@shamu:/data/local/tmp # ls -al
-rw-rw-rw- root     root     28213476 2020-09-09 17:17 frida-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일 전송 후 해당 경로를 확인 해 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt; 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;실행 권한&lt;/code&gt;이 없다.&lt;/p&gt;

&lt;p&gt;때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod&lt;/code&gt;를 이용하여 실행 권한을 부여 해 주어야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@shamu:/data/local/tmp # chmod 777 frida-server
root@shamu:/data/local/tmp # ls -al
-rwxrwxrwx root     root     28213476 2020-09-09 17:17 frida-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 기기에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;를 실행만 해 주면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@shamu:/data/local/tmp # ./frida-server &amp;amp;
[1] 5482
root@shamu:/data/local/tmp # ps | grep frida
root      5482  5472  92868  48516 ffffffff b5bc9950 S ./frida-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;나는 백그라운드에서 실행시키기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;를 붙여주었다.&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida&lt;/code&gt; 사용을 위한 코드를 구현해야 한다.&lt;/p&gt;

&lt;p&gt;코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;으로 구현하며, 사용하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;pip&lt;/code&gt;를 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-tools&lt;/code&gt;를 설치해야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;pip install frida-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-server&lt;/code&gt;가 실행중인 상태에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;frida-ps -U&lt;/code&gt;를 입력했을 때 아래와 같이 출력된다면 정상적으로 설치가 된 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/frida-setting/05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hooking&lt;/code&gt;을 위한 코드의 기본 틀은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Hooking 할 어플리케이션의 package 명&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;owasp.mstg.uncrackable1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
console.log(&quot;[+] Start Script&quot;);

Java.perform(function() {
	console.log(&quot;[+] Hooking System.exit&quot;);
	var exitClass = Java.use(&quot;java.lang.System&quot;);
	exitClass.exit.implementation = function() {
		console.log(&quot;[+] System.exit called&quot;);
	}
});
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frida&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_usb_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PACKAGE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jscode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[+] Running Hook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hooking 할 어플리케이션의 package 명&lt;/code&gt;은 아래 명령어로 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;frida-ps -Uia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PACKAGE_NAME&lt;/code&gt;에는 위의 명령어로 확인한 &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;명&lt;/span&gt;&lt;/code&gt;을 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hooking&lt;/code&gt;할 메소드를 설정하는 부분은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] Start Script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] Hooking System.exit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//Hooking 할 메소드의 class 명&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exitClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;java.lang.System&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//class명.method명.implementation = funtion(argv[])&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;exitClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] System.exit called&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.System&lt;/code&gt; 클래스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 메소드가 호출 될 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;[+] System.exit called&lt;/code&gt;를 출력한다.&lt;/p&gt;

&lt;p&gt;즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;System.exit&lt;/code&gt;가 호출 될 경우 해당 메소드가 Hooking되며, 어플리케이션이 종료되지 않고 넘어갈 수 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[VMware Connection failed] VMware SSH 연결 오류 - ip 구성이 올바르지 않습니다</title>
        <link>/error/windows/2020/09/01/ssh_connection_failed.html</link>
        <guid isPermaLink="true">/error/windows/2020/09/01/ssh_connection_failed.html</guid>
        <description>&lt;p&gt;또 Vmware의 가상머신에 SSH로 연결하려 했더니 연결 오류가 났다.&lt;/p&gt;

&lt;p&gt;지난번에는 오류 문구라도 있었는데, 이번에는 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;Connection failed&lt;/code&gt;다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;오류 상황은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connecting to 192.168.171.134:22...
Could not connect to '192.168.171.134' (port 22): Connection failed.

Type `help' to learn how to use Xshell prompt.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; 명령어를 이용 해 봐도 제대로 응답이 오지 않길래, 내 Windows에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt;를 통해 네트워크를 확인 해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_connection_failed/01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;확인 해 보니, 내 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;로 구성되어 있는 내 가상머신들의 &lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.171.0&lt;/code&gt; 대역인데, &lt;code class=&quot;highlighter-rouge&quot;&gt;VMware Network Adapter VMnet8&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;169.254.251.75&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;도대체 왜 바뀐지를 모르겠다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VMWare&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit &amp;gt; Virtual Network Editor&lt;/code&gt;를 선택 해 확인 해 보면 내 가상머신의 서브넷 주소를 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_connection_failed/02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;VMware&lt;/code&gt;에서 설정되어 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;VMNet8&lt;/code&gt;의 대역과 내 Windows PC에서 설정 된 대역이 다른 것이다.&lt;/p&gt;

&lt;p&gt;이를 맞추기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Virtual Network Editor&lt;/code&gt;를 변경해도 되는데, 나는 그냥 아래 명령어를 통해서 Windows에 설정을 변경했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; ipconfig/renew
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_connection_failed/03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 결과 &lt;code class=&quot;highlighter-rouge&quot;&gt;VMware NEtwork Adapter VMnet8&lt;/code&gt;의 IP 대역이 변경 된 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;다시 연결을 시도 해 보면 정상적으로 연결할 수 있다.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[SSH SOCKET ERROR] SSH Socket error Event: 32 Error: 10053</title>
        <link>/error/windows/2020/08/10/ssh_socket_error.html</link>
        <guid isPermaLink="true">/error/windows/2020/08/10/ssh_socket_error.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Vmware&lt;/code&gt;에 새로운 가상머신 설치후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Xshell&lt;/code&gt;로 접속하려고 하니 &lt;code class=&quot;highlighter-rouge&quot;&gt;socket error&lt;/code&gt;가 발생했다.&lt;/p&gt;

&lt;p&gt;이 전에도 이런 일이 있었어서 해결 방법을 찾아 정리 해 둔다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;오류 상황은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Connecting to 192.168.171.142:22...
Connection established.
To escape to local shell, press 'Ctrl+Alt+]'.

Socket error Event: 32 Error: 10053.
Connection closing...Socket close.

Connection closed by foreign host.

Disconnected from remote host(192.168.171.142:22) at 21:02:11.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그래서 이유를 확인하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;service ssh status&lt;/code&gt;를 입력 했더니 아래와 같은 오류 메시지들을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_socket/01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ssh 연결에 사용되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;load&lt;/code&gt;할 수 없다는 오류였다.&lt;/p&gt;

&lt;p&gt;권한 문제인가 해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/sshd&lt;/code&gt; 디렉터리로 들어가 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;들을 확인 해 보았더니 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;size&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;인 것을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_socket/02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;들을 다시 재 생성 해 주면 된다.&lt;/p&gt;

&lt;p&gt;나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh_host_dsa_key&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh_host_ecdsa_key&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh_host_ed25519_key&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh_host_rsa_key&lt;/code&gt;가 제대로 생성되지 않았으므로 아래의 명령어들을 통해 각각을 생성 해 주었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ssh-keygen -f /etc/ssh/ssh_host_dsa_key -t dsa -N &quot;&quot;
# ssh-keygen -f /etc/ssh/ssh_host_ecdsa_key -t ecdsa -N &quot;&quot;
# ssh-keygen -f /etc/ssh/ssh_host_ed25519_key -t ed25519 -N &quot;&quot;
# ssh-keygen -f /etc/ssh/ssh_host_rsa_key -t rsa -N &quot;&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 아래와 같이 출력되며 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 생성이 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_socket/03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/sshd&lt;/code&gt; 디렉터리를 확인해 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;size&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;이 아닌 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/ssh_socket/04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;를 다시 생성한 후 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH&lt;/code&gt;로 재접속을 해 보니 정상적으로 접속할 수 있었다.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[iOS] iPhone 탈옥에서 순정 상태로 되돌리기</title>
        <link>/pentesting/ios/2020/06/25/iOS-reset-from-jailbreak.html</link>
        <guid isPermaLink="true">/pentesting/ios/2020/06/25/iOS-reset-from-jailbreak.html</guid>
        <description>&lt;p&gt;몇달 전에 내가 전에 쓰던 아이폰을 탈옥 했는데, 그러고 한두번 진단을 하고 나니 폰이 켜지기만 할 뿐 탈옥도 다시 안되고 그렇다고 다른 어플이 실행되는 것도 아닌 상태가 되었다.&lt;/p&gt;

&lt;p&gt;그러다 &lt;code class=&quot;highlighter-rouge&quot;&gt;Unc0ver&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS 13.5.5&lt;/code&gt;까지 탈옥이 가능하다는 소식에 순정상태로 되돌렸다가 재 탈옥을 시도했다! &lt;del&gt;결론적으로 탈옥은 실패했다. 실패 이유는 아래에…&lt;/del&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;아래 설명한 방법은 아이폰을 순정 상태로 되돌리는 방법이며, iTunes를 통해 새로운 펌웨어를 설치하는 형식이기 때문에 현재 기준 iTunes에서 지원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;가장 최신 버전을 다운&lt;/code&gt;받게 된다. 때문에 탈옥이 불가능 할 수 있기 때문에 탈옥이 꼭 필요 한 경우 업데이트 버전을 잘 확인 하고 진행해야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;탈옥 된 폰을 순정상태로 되돌리기 위해선 일단 복구모드로 진입해야 한다.&lt;/p&gt;

&lt;p&gt;복구모드 진입 방법은 다음과 같다.&lt;/p&gt;

&lt;h4 id=&quot;1-아이폰을-pc와-연결&quot;&gt;1. 아이폰을 PC와 연결&lt;/h4&gt;

&lt;p&gt;PC에 iTunes 실행 후 아이폰을 연결 해 iTunes에서 인식하는지 확인한다.&lt;/p&gt;

&lt;h4 id=&quot;2-복구모드-진입&quot;&gt;2. 복구모드 진입&lt;/h4&gt;

&lt;p&gt;복구모드에 진입하는 방법은 버전 별로 살짝 다르다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;아이폰 6 이하 (물리 홈 버튼 존재)&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 전원을 끈다
2. 전원 버튼과 홈버튼을 동시에 누른다
3. 화면에 애플 로고가 보였다 사라지면 전원 버튼을 누른 손을 떼고 홈버튼만 누른다 (약 10초)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;아이폰 7이상 (물리 홈 버튼 X)&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 전원이 꺼진 상태에서 전원 버튼을 3초간 누른다
2. 전원 버튼을 누른 상태로 볼륨 다운 버튼을 누른다 (약 10초)
3. 애플 로고가 사라지면 전원 버튼을 떼고 볼륨 다운 버튼만 누른다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;만약 복구 모드로 제대로 진입한다면 아래와 같이 iTunes 화면에 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTunes가 복구 모드에 있는 iPhone을 발견했습니다.&lt;/code&gt; 라는 메시지가 나타난다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 창이 뜨면 확인을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;iPhone 초기화&lt;/code&gt; 버튼을 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 아래와 같이 알림 창이 뜰텐데, &lt;code class=&quot;highlighter-rouge&quot;&gt;복원 및 업데이트&lt;/code&gt;를 누르면 복원이 진행된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;복원을 시작하면 아래와 같은 창이 뜨며 아래의 순서대로 진행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;소프트웨어 꺼내는 중 &amp;gt; 복원을 위해 iPhone 준비 중 &amp;gt; iPhone을 기다리는 중 &amp;gt; Apple과 iPhone 복원 확인 중 &amp;gt; iPhone 소프트웨어 복원 중 &amp;gt; iPhone 소프트웨어 확인 중 &amp;gt; iPhone 펌웨어 복원 중
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모든 단계가 끝나면 복원이 완료되었다는 팝업 창이 뜨며 아이폰이 재부팅 된다.&lt;/p&gt;

&lt;p&gt;이 때도 아이폰을 PC에서 분리하면 안된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;재부팅이 완료되면 아래처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;iTunes&lt;/code&gt;에서 나타난다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;업데이트 한 버전을 확인하고 싶으면 아래의 정보 창에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;업데이트 확인&lt;/code&gt;을 선택하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 팝업 창으로 버전을 알려준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;휴대폰에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정 &amp;gt; 일반 &amp;gt; 소프트웨어 업데이트&lt;/code&gt;에서 현재 버전을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/ios/reset_jailbreak/09.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이렇게 신나게 복구를 다 하고 났는데, 뭔가 이상한게 &lt;code class=&quot;highlighter-rouge&quot;&gt;3uTools&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;13.5.1&lt;/code&gt;은 안되는 걸로 나왔다.&lt;/p&gt;

&lt;p&gt;그래서 &lt;a href=&quot;https://unc0ver.dev/&quot;&gt;Unc0ver 공식 홈페이지&lt;/a&gt;에 들어가서 확인 해 보니, &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS 11부터 13.5.5&lt;/code&gt;까지 지원하지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;12.3 ~ 12.3.2, 12.4.2 ~ 12.4.77, A7 ~ A8, 13.5.1&lt;/code&gt;은 지원하지 않는다고 한다.&lt;/p&gt;

&lt;p&gt;알고보니 현재 기준으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;13.5.5&lt;/code&gt;는 개발자를 위한 베타 버전이고, 일반 사용자에게 공개 된 최신 버전인 &lt;code class=&quot;highlighter-rouge&quot;&gt;13.5.1&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Unc0ver&lt;/code&gt;를 통한 탈옥 방지 메커니즘이 들어가 있는 버전이라고 한다. &lt;del&gt;그걸 초기화 후에 알았….&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;어쨌든 어플도 잘 실행되고 깨끗한 순정 상태로 돌아왔으나, 진단용으로는 아직 사용할 수 없을 것 같다.&lt;/p&gt;

&lt;p&gt;순정상태로 만들고 탈옥 포스팅 업데이트 하려고 했었는데 다망했어 ㅠㅠㅠ&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;13.5.1&lt;/code&gt;도 탈옥할 수 있게 만들어주세요 ㅠㅠ 개발자 등록을 해야하나..ㅠㅠ&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Jun 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Jekyll] Syntax Highlighting with rouge</title>
        <link>/development/github%20blog/2020/06/16/jekyll-rougify_theme.html</link>
        <guid isPermaLink="true">/development/github%20blog/2020/06/16/jekyll-rougify_theme.html</guid>
        <description>&lt;p&gt;내 블로그에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Syntax Highlighting&lt;/code&gt;을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;rouge&lt;/code&gt;를 사용하고 있다.&lt;/p&gt;

&lt;p&gt;기존에 사용하던 검은 바탕의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Syntax Highlighting&lt;/code&gt;이 답답하고 가독성이 떨어져 보여 바꾸고 싶어 찾던 중 생각보다 자료가 별로 없어 따로 정리 해 두게 되었다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rouge&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 기반이기 때문에 아래의 명령어를 통해 설치할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# gem install rouge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;내 경우, 예전에 아래 포스팅을 쓸 때 로컬에 블로그를 세팅해 둔 가상머신에 이미 설치가 되어 있는 상태였다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://mingzz1.github.io/development/github%20blog/2020/01/06/jekyll-local_blog_setting.html&quot;&gt;[Jekyll] Local에 Github Blog 세팅하기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;gem&lt;/code&gt;이 설치되어 있지 않다면 위의 글을 참고해 설치하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rouge&lt;/code&gt;가 설치되었다면 어떤 스타일을 사용 가능한지 확인을 해 보아야 한다.&lt;/p&gt;

&lt;p&gt;확인하는 명령어는 &lt;code class=&quot;highlighter-rouge&quot;&gt;rougify help style&lt;/code&gt;이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rougify help style
usage: rougify style [&amp;lt;theme-name&amp;gt;] [&amp;lt;options&amp;gt;]

Print CSS styles for the given theme.  Extra options are
passed to the theme. To select a mode (light/dark) for the
theme, append '.light' or '.dark' to the &amp;lt;theme-name&amp;gt;
respectively. Theme defaults to thankful_eyes.

options:
  --scope     (default: .highlight) a css selector to scope by
  --tex       (default: false) render as TeX
  --tex-prefix (default: RG) a command prefix for TeX
              implies --tex if specified

available themes:
  base16, base16.dark, base16.light, base16.monokai, base16.monokai.dark, base16.monokai.light, base16.solarized, base16.solarized.dark, base16.solarized.light, bw, colorful, github, gruvbox, gruvbox.dark, gruvbox.light, igorpro, magritte, molokai, monokai, monokai.sublime, pastie, thankful_eyes, tulip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;내가 테스트한 현재 기준으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;23개&lt;/code&gt;의 테마를 사용할 수 있었다.&lt;/p&gt;

&lt;p&gt;사용 가능한 테마는 명령어 실행 결과 하단에 나온다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;available themes:
  base16, base16.dark, base16.light, base16.monokai, base16.monokai.dark, base16.monokai.light, base16.solarized, base16.solarized.dark, base16.solarized.light, bw, colorful, github, gruvbox, gruvbox.dark, gruvbox.light, igorpro, magritte, molokai, monokai, monokai.sublime, pastie, thankful_eyes, tulip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 테마를 적용하기 위해서는 아래 명령어를 사용하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rougify style [Theme_Name] &amp;gt; [CSS_Source_Path/Filename]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;23개&lt;/code&gt;의 테마 중 마음에 드는 테마를 고른 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;rougify style 테마명&lt;/code&gt;을 하면 해당 테마의 &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; 코드가 출력되는데, 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;syntax&lt;/code&gt;를 적용하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; 파일에 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;내 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; 테마에 &lt;code class=&quot;highlighter-rouge&quot;&gt;_syntax.scss&lt;/code&gt;라는 파일이 존재하고 있어 해당 파일에 마음에 드는 테마인 &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;css code&lt;/code&gt;를 넣어 주었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rougify style github &amp;gt; _sass/external/_syntax.scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테마가 어떤지 확인 해 보고 싶은데 내가 못찾은 건지, 테마를 확인할 수 있는 곳이 없었다.&lt;/p&gt;

&lt;p&gt;그래서 나는 하나하나 다 테스트 해 봤다 ㅠㅠ&lt;/p&gt;

&lt;p&gt;다음번에는 이런 수고로움을 덜기 위해 각 테마 별로 샘플 코드를 구현 해 캡쳐를 해 두었다.&lt;/p&gt;

&lt;p&gt;마음에 드는 구성을 찾아 사용하면 될 것 같다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.dark&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.dark.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.light&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.light.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.monokai&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.monokai.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.monokai.dark&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.monokai.dark.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.monokai.light&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.monokai.light.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.solarized&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.solarized.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.solarized&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.solarized.dark.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;base16.solarized&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/base16.solarized.light.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bw&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/bw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;colorful&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/colorful.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;github&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/github.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gruvbox&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/gruvbox.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gruvbox.dark&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/gruvbox.dark.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gruvbox.light&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/gruvbox.light.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;igorpro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/igorpro.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;magritte&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/magritte.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;molokai&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/molokai.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;monokai&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/monokai.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;monokai.sublime&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/monokai.sublime.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pastie&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/pastie.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;thankful_eyes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/thankful_eyes.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;tulip&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/blog/rougify-theme/tulip.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[BurpSuite] A JNI error has occurred / A Java Exception has occurred 오류 </title>
        <link>/error/windows/2020/06/10/BurpSuite_JNI_error.html</link>
        <guid isPermaLink="true">/error/windows/2020/06/10/BurpSuite_JNI_error.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BurpSuite&lt;/code&gt;를 최신 버전으로 설치하는데 오류가 났다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt; 버전이 문제여서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java 9&lt;/code&gt; 이상을 설치하니 해결할 수 있었다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;오류 상황은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://portswigger.net/&quot;&gt;BurpSuite 공식 홈페이지&lt;/a&gt;에서 최신 버전의 &lt;code class=&quot;highlighter-rouge&quot;&gt;exe&lt;/code&gt;를 다운받아 설치하려 했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/burp_jni/jni_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그랬더니 위의 사진처럼 최초 프로그레스 바에서 중간에 끊기더니 설치 과정이 진행이 안됬다.&lt;/p&gt;

&lt;p&gt;그래서 대안으로 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;jar&lt;/code&gt;를 다운받았다.&lt;/p&gt;

&lt;p&gt;이번에는 아래와 같은 오류 두개가 나타났다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/burp_jni/jni_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/burp_jni/jni_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오류 메세지가 나와서 이를 찾아보니, &lt;code class=&quot;highlighter-rouge&quot;&gt;Portswigger Forum&lt;/code&gt;에서 아래와 같은 답변을 찾을 수 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://forum.portswigger.net/thread/can-t-open-burp-suite-error-a-jni-error-occured-please-check-your-installation-and-try-again-c9e1c4ea&quot;&gt;Can’t open Burp Suite – “Error: A JNI error occured, please check your installation and try again”&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;답변 내용은 아래와 같다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unfortunately, Burp, Version 2020.4.1 no longer supports using Java 8 so you would need to update your Java version in order for Burp to work. We have tested the latest version against OpenJDK 13.0.3 but versions 9 and above should work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;2020년 4월 1일&lt;/code&gt; 이후, Java 8 버전은 더이상 사용할 수 없다.&lt;/p&gt;

&lt;p&gt;최소 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java 9&lt;/code&gt; 버전 이상은 사용해야 한다.&lt;/p&gt;

&lt;p&gt;답변대로, 최신 &lt;code class=&quot;highlighter-rouge&quot;&gt;JDK 14&lt;/code&gt; 버전을 찾아 설치 해 주었더니 &lt;code class=&quot;highlighter-rouge&quot;&gt;jar&lt;/code&gt;는 실행할 수 있었다.&lt;br /&gt;
&lt;del&gt;exe는 여전히 안된다 ㅠㅠ 왜일까…&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JDK 14.0.1&lt;/code&gt;은 아래에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technologies/javase-jdk14-downloads.html&quot;&gt;Java SE Development Kit 14 Downloads&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 10 Jun 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Android] 안드로이드 Burp Suite 사용 설정</title>
        <link>/pentesting/android/2020/06/08/Setting-Burp-Suite-for-Android.html</link>
        <guid isPermaLink="true">/pentesting/android/2020/06/08/Setting-Burp-Suite-for-Android.html</guid>
        <description>&lt;p&gt;안드로이드 어플리케이션 취약점 진단을 할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;를 주로 사용한다.&lt;/p&gt;

&lt;p&gt;안드로이드 기기에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;를 사용하는 방법은 다음과 같다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;일단 나는 주로 진단할 때 내 실 휴대폰을 사용하기에는 이런저런 제약사항과 불편함이 많아서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;를 사용한다.&lt;br /&gt;
(쓸데없는 어플 잔뜩 깔았다 지우기, 루팅, 업데이트 이슈 등)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;는 아래 링크에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.bignox.com/&quot;&gt;https://www.bignox.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;설치 후 실행 한 다음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox&lt;/code&gt; 상단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ROOT켜기&lt;/code&gt;를 선택 해 주면 루팅 된 에뮬레이터를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;를 사용하기 위해서는 일단 네트워크의 프록시 설정을 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;에뮬레이터 내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정 &amp;gt; Wi-Fi &amp;gt; WiredSSID&lt;/code&gt;를 선택한다.&lt;/p&gt;

&lt;p&gt;이 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;WiredSSID&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;길게 눌러 주어야&lt;/code&gt; 프록시 설정 화면으로 넘어갈 수 있으며, 만약 실 휴대폰을 사용 할 경우 사용하고 있는 와이파이 네트워크를 길게 눌러 주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WiredSSID&lt;/code&gt;를 길게 누르면 아래와 같은 설정 화면이 나타난다.&lt;/p&gt;

&lt;p&gt;여기에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;네트워크 수정&lt;/code&gt;을 선택하고, 아래와 같이 설정 해 준다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;고급 옵션 체크&lt;/li&gt;
  &lt;li&gt;프록시 : 수동&lt;/li&gt;
  &lt;li&gt;프록시 호스트 이름 : Burp Suite를 실행 할 PC의 IP 주소. 같은 네트워크에 존재해야 함&lt;/li&gt;
  &lt;li&gt;프록시 포트 : 프록시 서버의 포트. Burp Suite에도 같은 포트를 설정 해 주어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;휴대폰에서의 설정이 끝난 후에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;에서 에뮬레이터 혹은 안드로이드 휴대폰의 패킷을 잡기 위해 설정을 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Proxy &amp;gt; Options&lt;/code&gt;를 선택하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Proxy Listeners&lt;/code&gt;라는 메뉴가 있다.&lt;/p&gt;

&lt;p&gt;여기에서 어디를 지나가는 패킷을 잡을 지 설정할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;/code&gt;를 눌러 모바일 기기에서의 패킷을 잡을 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Listeners&lt;/code&gt;를 추가 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bind to port&lt;/code&gt;는 앞서 모바일 기기의 &lt;code class=&quot;highlighter-rouge&quot;&gt;프록시 포트&lt;/code&gt;에 설정 한 포트 번호를 입력한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bind to address&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;All interfaces&lt;/code&gt;를 선택한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt;를 눌러 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Proxy Listeners&lt;/code&gt;에 방금 입력 한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Listener&lt;/code&gt;가 추가되어 있는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Running&lt;/code&gt;에 체크가 되어 있어야 패킷을 잡을 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기까지 하면 기본 설정은 끝이 난다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;를 사용하는 곳만 방문 할 경우에는 아무런 오류가 나지 않을 것이다.&lt;/p&gt;

&lt;p&gt;하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;를 사용하는 페이지에 접속을 시도하면 아래와 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안 경고&lt;/code&gt;가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_07.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인증서가 없어 오류가 나는 것이므로, &lt;a href=&quot;http://burp&quot;&gt;http://burp&lt;/a&gt;를 방문하여 인증서를 설치 해 주면 된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://burp&quot;&gt;http://burp&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://burp&quot;&gt;http://burp&lt;/a&gt;를 주소창에 입력하면 아래와 같은 페이지에 접속할 수 있다.&lt;/p&gt;

&lt;p&gt;만약 접속할 수 없다면 아래 내용들을 확인 해 보면 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wi-Fi 설정에서 프록시 설정을 했는가&lt;/li&gt;
  &lt;li&gt;Burp Suite가 켜져 있는가&lt;/li&gt;
  &lt;li&gt;Burp Suite에 Listener가 Running 상태인가&lt;/li&gt;
  &lt;li&gt;Proxy 메뉴에서 Intercept On으로 해 두었을 때 패킷이 잡히는가&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_08.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;접속 후에는 오른쪽 상단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;CA Certificate&lt;/code&gt;을 눌러 인증서를 다운받아 준다.&lt;/p&gt;

&lt;p&gt;그런데 여기서 다운받는 인증서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cacert.der&lt;/code&gt;로, &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows PC&lt;/code&gt;에서 설치할 수 있는 형태이다.&lt;/p&gt;

&lt;p&gt;안드로이드 기기에서 설치하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.cer&lt;/code&gt; 확장자여야 하기 때문에 이름 변경이 필요하다.&lt;/p&gt;

&lt;p&gt;이를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;를 설치한다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;는 함께 설치되어 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player&lt;/code&gt;가 설치 된 폴더(내 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Program Files (x86)\Nox\bin&lt;/code&gt;)에 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb.exe&lt;/code&gt;가 존재한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb.exe&lt;/code&gt;가 있는 폴더가 아니라 다른 경로에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 실행하고 싶은 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;환경 변수&lt;/code&gt;에 등록 해 주면 된다.&lt;/p&gt;

&lt;p&gt;시작 메뉴에 &lt;code class=&quot;highlighter-rouge&quot;&gt;환경 변수&lt;/code&gt;를 검색 해 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;시스템 환경 변수 편집&lt;/code&gt;이 있다.&lt;/p&gt;

&lt;p&gt;이를 선택한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;고급 탭 &amp;gt; 환경 변수&lt;/code&gt; 메뉴를 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_10.png&quot; alt=&quot;&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;시스템 변수&lt;/code&gt;를 살펴 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Path&lt;/code&gt;가 있는데, 이를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;편집&lt;/code&gt; 버튼을 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_11.png&quot; alt=&quot;&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이미 등록되어 있는 환경 변수들이 있을텐데, 가장 마지막에 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb.exe가 존재하는 경로&lt;/code&gt; 즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;Nox Player가 설치되어 있는 경로&lt;/code&gt;를 입력한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt;을 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_12.png&quot; alt=&quot;&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;등록 후 재부팅을 하면 어느 위치에서든 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 실행할 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;가 정상적으로 동작하는지 확인하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb devices&lt;/code&gt;를 입력 해 보았다.&lt;/p&gt;

&lt;p&gt;아래와 같이 디바이스 정보가 뜨면 정상적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt;를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다운 받은 인증서의 이름을 변경하기 위해 디바이스의 쉘을 실행 시켰다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;adb shell&lt;/code&gt;을 입력하면 연결된 모바일 기기의 쉘을 실행시킬 수 있다.&lt;/p&gt;

&lt;p&gt;모든 명령어는 리눅스와 동일하기 때문에 어렵지 않게 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;다운받은 인증서는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnt/sdcard/Download&lt;/code&gt; 폴더에 저장되어 있다.&lt;/p&gt;

&lt;p&gt;해당 경로로 들어 가 &lt;code class=&quot;highlighter-rouge&quot;&gt;cacert.der&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;cacert.cer&lt;/code&gt;로 변경 해 주었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# adb shell
# cd mnt/sdcard/Download/
# ls
cacert.der
# mv cacert.der cacert.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;PC&lt;/code&gt;에서 인증서를 다운받아 &lt;code class=&quot;highlighter-rouge&quot;&gt;adb push&lt;/code&gt;를 통해 인증서를 넣는경우에도 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnt/sdcard/&lt;/code&gt; 경로에 저장하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# adb push [인증서경로] /mnt/sdcard/cacert.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;인증서 저장이 완료 되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정 &amp;gt; 보안 &amp;gt; SD 카드에서 설치 &amp;gt; 내부 저장소&lt;/code&gt;를 선택 해 인증서를 저장 한 경로로 이동한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnt/sdcard/Download&lt;/code&gt; 아래에 저장 해 두었는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;SD 카드에서 설치 &amp;gt; 내부 저장소&lt;/code&gt;를 선택했을 때 보이는 경로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mnt/sdcard&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;따라서 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download&lt;/code&gt;를 선택하고 해당 폴더 안의 &lt;code class=&quot;highlighter-rouge&quot;&gt;cacert.cer&lt;/code&gt;를 선택 해 주었다.&lt;/p&gt;

&lt;p&gt;인증서 선택 시 인증서 이름을 지정하라고 하는데 나는 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;burp&lt;/code&gt;로 설정 해 주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt;을 눌러 주면 인증서 설치가 완료 될 것이다.&lt;/p&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;로 패킷을 잡아 보면 정상적으로 모바일 기기에서의 패킷이 잡히는 것을 확인할 수 있으며, 경고창도 뜨지 않는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/android/burp_setting/burp_setting_18.png&quot; alt=&quot;&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;예시는 인터넷만 실행 해 보았는데, 만약 어플리케이션이 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; 통신을 하는 경우에도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;를 통해 확인할 수 있다.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Jun 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Code-Server] 웹 브라우저로 원격 서버에 접속 해 개발하기 (feat. VSCode)</title>
        <link>/development/web/2020/05/13/install_code-server.html</link>
        <guid isPermaLink="true">/development/web/2020/05/13/install_code-server.html</guid>
        <description>&lt;p&gt;회사에서 일하다 보면 Xshell은 설치할 수 없는데 원격 서버에서 뭔가 테스트용 코드를 짜야 할 일이 생긴다.&lt;/p&gt;

&lt;p&gt;그래서 찾아보게 된 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;이다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;를 사용하면 리눅스 서버에 &lt;code class=&quot;highlighter-rouge&quot;&gt;VSCode&lt;/code&gt;를 띄우고, 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 브라우저&lt;/code&gt;를 사용하여 접속할 수 있도록 해 준다.&lt;/p&gt;

&lt;p&gt;때문에 노트북 뿐만 아니라, 태블릿이나 휴대폰으로도 원격 서버에 접속 해 파일을 생성하고, 개발을 할 수 있다.&lt;/p&gt;

&lt;p&gt;하지만 쉘을 실행한 것이 아니기 때문에 명령어를 실행 할 수는 없다.&lt;/p&gt;

&lt;p&gt;그래도 굳이 &lt;code class=&quot;highlighter-rouge&quot;&gt;xshell&lt;/code&gt;이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;putty&lt;/code&gt;를 설치하지 않고도 웹 브라우저 만으로 파일을 생성하고 수정할 수 있기 때문에 편리하다.&lt;/p&gt;

&lt;p&gt;설치 방법 또한 매우 간단하다.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;blockquote&gt;
          &lt;blockquote&gt;
            &lt;blockquote&gt;
              &lt;blockquote&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;&lt;a href=&quot;https://github.com/cdr/code-server&quot;&gt;code-server Github Repository&lt;/a&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;를 다운받을 수 있다.&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/blockquote&gt;
            &lt;/blockquote&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;링크에 접속해서 아래를 확인 해 보면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Releases&lt;/code&gt;가 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download a release.&lt;/code&gt;를 선택하면 최신 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;를 다운받을 수 있다.&lt;/p&gt;

&lt;p&gt;내가 다운받은 버전은 &lt;code class=&quot;highlighter-rouge&quot;&gt;3.2.0&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;여러 부분이 바뀌었다고 하는데, 나는 아래 표시 한 부분을 뒤늦게 발견하는 바람에 조금 삽질을 했다 ㅠㅠ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일이 여러개 있을텐데, 여기서 내 환경에 맞는 파일을 다운받으면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 20.04 64bit&lt;/code&gt;를 사용했기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server-3.2.0-linux-x86-64.tar.gz&lt;/code&gt;를 다운받기로 했다.&lt;/p&gt;

&lt;p&gt;해당 파일에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;마우스 오른쪽 버튼 &amp;gt; 링크 주소 복사&lt;/code&gt;를 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 후 리눅스 서버로 돌아와서 아래의 명령어를 입력 해 파일을 다운받는다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wget https://github.com/cdr/code-server/releases/download/3.2.0/code-server-3.2.0-linux-x86_64.tar.gz

...

code-server-3.2.0-linux-x 100%[====================================&amp;gt;]  66.09M   739KB/s    in 2m 13s  

2020-05-13 11:16:54 (509 KB/s) - ‘code-server-3.2.0-linux-x86_64.tar.gz’ saved [69306138/69306138]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 위와 같이 파일을 다운받을 수 있다.&lt;/p&gt;

&lt;p&gt;다운받은 파일이 압축되어 있으므로 압축을 풀어야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# tar -xvf code-server-3.2.0-linux-x86_64.tar.gz
...
code-server-3.2.0-linux-x86_64/dist/register.js.map
code-server-3.2.0-linux-x86_64/dist/pages/
code-server-3.2.0-linux-x86_64/dist/pages/app.js
code-server-3.2.0-linux-x86_64/dist/pages/app.css
code-server-3.2.0-linux-x86_64/dist/pages/app.css.map
code-server-3.2.0-linux-x86_64/dist/pages/app.js.map
code-server-3.2.0-linux-x86_64/dist/register.js
code-server-3.2.0-linux-x86_64/dist/serviceWorker.js.map
code-server-3.2.0-linux-x86_64/dist/serviceWorker.js
code-server-3.2.0-linux-x86_64/package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;압축을 풀고 해당 디렉터리로 들어 가 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;라는 바이너리가 있다.&lt;/p&gt;

&lt;p&gt;만약 바이너리에 실행 권한이 없는 상태라면 아래의 명령어를 통해 실행 권한을 주어야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd code-server-3.2.0-linux-x86_64
# chmod +x code-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt; 바이너리를 실행시키면 웹 브라우저를 통해 원격 서버에 접속할 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;그런데 만약 원격 서버가 오픈되어 있는 경우라면, 불특정 다수가 해당 서버에 접속해서 아무 파일이나 막 생성할 수 있다.&lt;/p&gt;

&lt;p&gt;때문에 접속하기 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;패스워드&lt;/code&gt;를 설정 해 주어야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# echo &quot;export PASSWORD='PASSWORD_YOU_WANT'&quot; &amp;gt;&amp;gt; ~/.bashrc
# source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat ~/.bashrc&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; 파일을 확인 해 보면 가장 아래쪽에 내가 입력 한 패스워드가 들어가 있을 것이다.&lt;/p&gt;

&lt;p&gt;마지막으로 접속을 위해 사용 할 포트를 열어 주어야 한다.&lt;/p&gt;

&lt;p&gt;만약 웹 개발을 한다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;80&lt;/code&gt; 포트를 기본적으로 사용하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;code-server&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt; 포트를 사용하기로 했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ufw allow 8080/tcp
Rules updated
Rules updated (v6)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 포트를 열어 준 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;./code-server --bind-addr [원격서버 IP 주소]:[사용할 포트]&lt;/code&gt;의 형태로 바이너리를 실행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ./code-server --bind-addr 192.168.171.135:8080
info  code-server 3.2.0 fd36a99a4c78669970ebc4eb05768293b657716f
info  HTTP server listening on http://192.168.171.135:8080
info    - Using custom password for authentication
info    - Not serving HTTPS
info  Automatic updates are enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정상적으로 실행이 됬다면, 웹 브라우저를 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://IP_Address:Port&lt;/code&gt;로 접속한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;패스워드를 설정 했다면 위와 같은 화면이 나올 것이고, 하지 않았다면 아래의 화면이 나타난다.&lt;/p&gt;

&lt;p&gt;패스워드를 설정 한 경우에는 패스워드를 입력하면 아래의 페이지로 이동한다.&lt;/p&gt;

&lt;p&gt;이제 이를 활용 해 파일이나 디렉터리를 생성하고 개발을 하면 된다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내가 놀랐던 점은 디렉터리 이동도 매우 쉬웠다는 거다.&lt;/p&gt;

&lt;p&gt;위의 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add workspace folder...&lt;/code&gt;를 선택하면 아래처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;/root/&lt;/code&gt;와 함께 주소창(?)이 생성된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 주소창에 내가 원하는 경로를 입력하면 해당 경로 하위에 있는 파일이나 디렉터리가 출력되어, 굳이 경로를 외우지 않아도 쉽게 디렉터리를 이동할 수 있다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/code-server/code-server_09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 May 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Apache Tomcat] 서버 버전 정보 노출 숨기기</title>
        <link>/pentesting/web/2020/04/05/tomcat_hide_version_on_error_page_.html</link>
        <guid isPermaLink="true">/pentesting/web/2020/04/05/tomcat_hide_version_on_error_page_.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Apache Tomcat&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt;를 유발했더니 서버 버전 정보가 노출되었다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt; 페이지에서 출력되는 버전 정보를 숨기는 방법은 아래와 같다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;일단 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt; 페이지에서 노출되는 서버 버전 정보를 확인하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Error&lt;/code&gt;를 발생시켰더니 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Apache Tomcat/7.0.68 (Ubuntu)&lt;/code&gt;라는 정보가 출력되었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Apache Tomcat&lt;/code&gt;에서 버전 정보를 숨기기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/tomcat7/server.xml&lt;/code&gt; 파일을 수정해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;server.xml&lt;/code&gt; 파일을 열고 가장 아래로 내려보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Host&amp;gt;&lt;/code&gt; 태그를 발견할 수 있다.&lt;/p&gt;

&lt;p&gt;해당 태그 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Valve&amp;gt;&lt;/code&gt;라는 태그가 있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Valve&amp;gt;&lt;/code&gt; 태그를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tomcat&lt;/code&gt;에 들어오는 각 요청에 대한 전처리를 수행할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt; 페이지에 대한 전처리 설정을 하기 위해 아래와 같이 새로운 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Valve&amp;gt;&lt;/code&gt;를 추가 해 준다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.ErrorReportValve&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showReport=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;showServerInfo=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tomcat&lt;/code&gt;을 재실행 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;재실행을 하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/tomcat7/bin&lt;/code&gt; 디렉터리의 &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown.sh&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;startup.sh&lt;/code&gt;를 차례로 실행 해 주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데 내 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown.sh&lt;/code&gt;를 실행하니 아래와 같은 오류가 났다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java.io.FileNotFoundException: /usr/share/tomcat7/conf/server.xml (No such file or directory)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 오류를 해결하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/tomcat7&lt;/code&gt; 디렉터리로 가 아래의 명령어를 입력 해 주면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /var/lib/tomcat7/* ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown.sh&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;startup.sh&lt;/code&gt;를 차례로 실행 해 주면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tomcat started&lt;/code&gt;라는 문구가 뜨며 재실행이 된 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 웹으로 돌아가 아까와 똑같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Error&lt;/code&gt;를 발생 해 보면 서버 버전 정보 뿐만 아니라 오류의 세부 내용도 함께 사라진 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/tomcat_hiding_version/tomcat_info_09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;인터넷에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tomcat&lt;/code&gt;의 서버 버전 정보 노출 방지 방법을 찾으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;catalina.jar&lt;/code&gt;를 찾아 특정 폴더 내에 있는 버전 정보를 지우도록 하는 방법이 나온다.&lt;/p&gt;

&lt;p&gt;나도 처음엔 그렇게 해보려 했는데, 저렇게 할 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;catalina.jar&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;repackaging&lt;/code&gt;되면서 의도치 않은 오류가 발생할 수 있다고 한다.&lt;/p&gt;

&lt;p&gt;그래서 위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Valve&amp;gt;&lt;/code&gt;를 사용 해 처리하는 방법을 권장한다고 한다.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Apr 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Apache2] 서버 버전 정보 노출 숨기기</title>
        <link>/pentesting/web/2020/04/05/apache_hide_server_version.html</link>
        <guid isPermaLink="true">/pentesting/web/2020/04/05/apache_hide_server_version.html</guid>
        <description>&lt;p&gt;웹 취약점 진단 항목 중에 서버 버전 및 정보의 노출을 확인하는 것이 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OWASP&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Fingerprint Web Server&lt;/code&gt;라고 명시하며, 노출 된 웹 서버의 버전이나 정보를 통해 공격자가 공격을 위한 힌트를 얻을 수 있기 때문에 노출을 자제하도록 권고한다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server.md&quot;&gt;OWASP Fingerprint Web Server&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Risk는 크지 않지만 자주 나오는 취약점이기도 하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Apache2&lt;/code&gt;를 사용할 때, 서버 버전이 노출되는지 확인하는 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Response&lt;/code&gt;를 확인하는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Response&lt;/code&gt;를 잡아 확인 해 보면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Server: Apache/2.4.18 (Ubuntu)&lt;/code&gt;가 출력된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 정보를 통해 공격자가 해당 버전의 &lt;code class=&quot;highlighter-rouge&quot;&gt;CVE&lt;/code&gt; 등을 찾아 공격을 시도 해 볼 수 있으므로 숨기는게 좋다고 한다.&lt;/p&gt;

&lt;p&gt;내가 테스트 한 버전은 아래와 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu 16.04&lt;/li&gt;
  &lt;li&gt;Apache 2.4.18&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;일반적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Apache&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;httpd.conf&lt;/code&gt;를 고치면 된다고 하는데, 찾아보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;httpd.conf&lt;/code&gt;가 사라졌다고 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/215157/why-dont-i-have-a-httpd-conf-file-in-etc-apache2&quot;&gt;Why don’t I have a httpd.conf file in /etc/apache2?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;에서는 서버 버전 정보를 숨기기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/conf-available/security.conf&lt;/code&gt; 파일을 수정해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/conf-enabled/&lt;/code&gt;에도 &lt;code class=&quot;highlighter-rouge&quot;&gt;security.conf&lt;/code&gt; 파일이 있으나, 이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;conf-available&lt;/code&gt; 디렉터리의 파일과 연결 된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Symbolic Link&lt;/code&gt; 파일이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/conf-available/&lt;/code&gt; 디렉터리에 가 보면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;security.conf&lt;/code&gt; 파일이 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 파일을 열어 &lt;code class=&quot;highlighter-rouge&quot;&gt;ServerTokens&lt;/code&gt;로 검색을 해 보면 아래와 같은 설정을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;원래 초기값은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerTokens OS
ServerSignature On
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 값을 아래와 같이 변경 해 준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerTokens Prod
ServerSignature Off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ServerTokens&lt;/code&gt;의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;Full, OS, Minimal, Minor, Major, Prod&lt;/code&gt; 중 하나로 설정할 수 있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;Full&lt;/code&gt;이 가장 많은 정보를 출력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Prod&lt;/code&gt;가 가장 적은 정보를 출력 해 보안 상 권장 설정은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Prod&lt;/code&gt;다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ServerSignature&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;On, Off, EMail&lt;/code&gt; 중 하나로 설정할 수 있으며, 각각 출력하는 정보는 아래와 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On : 서버 버전, 가상 호스트명&lt;/li&gt;
  &lt;li&gt;Off : 정보를 추가하지 않음&lt;/li&gt;
  &lt;li&gt;EMail : 서버버전, 가상호스트명과 함께 ServerAdmin 정보도 함께 보여 줌&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;설정을 위와 같이 변경했다면, 아래의 명령어를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;apache&lt;/code&gt;를 재실행 해 준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service apache2 restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Apache&lt;/code&gt;를 재실행 한 후 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Response&lt;/code&gt;를 확인 해 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Server: Apache&lt;/code&gt;라는 정보만 나올 뿐 버전 정보나 OS 정보는 출력되지 않는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/web/apache_hiding_version/apache_info_08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Apr 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[AWS S3] Referer를 통해 S3 파일 접근 제어하기</title>
        <link>/pentesting/cloud/2020/04/05/aws_s3_access_control_with_referer.html</link>
        <guid isPermaLink="true">/pentesting/cloud/2020/04/05/aws_s3_access_control_with_referer.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3(Simple Storage Service)&lt;/code&gt;라는 저장소가 존재한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에서는 데이터를 저장하기 위한 기본 컨테이너를 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;라고 부르는데, 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Referer&lt;/code&gt;를 통한 접근제어 정책을 설정 해 특정 도메인에서만 접근할 수 있도록 하는 방법을 정리한다.&lt;br /&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;을 생성할 때 아무 설정도 건드리지 않는다면 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket 내 파일&lt;/code&gt;의 접근 권한은 &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;이 된다.&lt;/p&gt;

&lt;p&gt;하지만 웹에서 사용하는 이미지 등을 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; 등에 올리며, 설정을 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt;으로 바꾸는 경우가 있는 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;의 접근 권한 설정을 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt;으로 할 경우 설정에 따라 임의의 사용자가 파일 업로드 및 다운로드 할 수 있으므로 접근제어 정책을 설정 해 주는 것이 좋다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; 페이지에 접속하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;을 선택한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;권한 &amp;gt; 버킷 정책&lt;/code&gt;을 선택하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책 편집기&lt;/code&gt;를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;스크롤을 아래로 내려 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;정책 생성기&lt;/code&gt;가 있는데, 이를 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;정책 생성기&lt;/code&gt;의 기본 페이지 모습이다.&lt;/p&gt;

&lt;p&gt;정책을 설정하는 것은 아니고, &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책 편집기&lt;/code&gt;에 들어갈 정책을 &lt;code class=&quot;highlighter-rouge&quot;&gt;format&lt;/code&gt;에 맞게 만들어 주는 페이지이다.&lt;/p&gt;

&lt;p&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;정책 설정 format&lt;/code&gt;을 모두 알고있다면 굳이 &lt;code class=&quot;highlighter-rouge&quot;&gt;정책 생성기&lt;/code&gt;를 사용 할 필요는 없는 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정책을 설정하기 위해 아래와 같이 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Amazon Resource Name (ARN)&lt;/code&gt;은 앞의 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책 편집기&lt;/code&gt; 페이지에서 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모든 정책을 다 적으면 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Effect : Allow
* Principal : *
* AWS Service : Amazon S3
* Actions : GetObject
* Amazon Resource Name (ARN) : [버킷 정책 편집기] 페이지에서 확인한 값/*

&amp;gt; Add Conditions (Optional)
* Condition : StringLike
* Key : aws:Referer
* Value : http://DOMAINNAME/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 설정에 대한 설명은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Effect : 특정 도메인에 대해 '허용'하는 정책이므로 Allow
* Principal : 정책을 적용할 대상, 웹을 통해 접속하는 모든 사람이 대상이므로 *
* AWS Service : 적용 할 서비스 명
* Actions : 정책이 적용되는 action. S3에서 이미지 파일을 다운로드 하므로 s3:GetObject
* Amazon Resource Name (ARN) : [버킷 정책 편집기] 페이지에서 확인한 값/*

&amp;gt; Add Conditions (Optional)
* Condition : 정책 조건 부여. 특정 도메인을 통할 경우 정책이 적용되어야 하므로 StringLike
* Key : 조건을 어디에 적용할 지. 이 경우 Referer를 통해 확인하므로 aws:Referer
* Value : 허용 할 도메인 값을 입력, http://DOMAINNAME/*
  =&amp;gt; if (Referer == &quot;http://DOMAINNAME/*&quot;) 와 같음
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/HTTP_%EB%A6%AC%ED%8D%BC%EB%9F%AC&quot;&gt;HTTP Referer란?&lt;/a&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;웹 브라우저로 World Wide Web을 서핑할 때 하이퍼링크를 통해 각각의 사이트로 방문 시 남는 흔적&lt;/li&gt;
    &lt;li&gt;예를 들어 A 페이지에서 B 사이트로 이동하는 하이퍼링크가 존재 할 경우, 사용자가 이 하이퍼링크를 클릭하면 웹 브라우저에서 B 사이트로 참조 주소(Referer)를 전송함&lt;/li&gt;
    &lt;li&gt;B 사이트 관리자는 이 Referer를 통해 방문객이 A 사이트를 통해 자신의 사이트에 방문한 것을 알 수 있음&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;모든 설정을 한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Condition&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Statement&lt;/code&gt;를 차례로 눌러 주면 아래와 같이 정책이 생긴 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;이 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Generate Policy&lt;/code&gt;를 눌러 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 결과 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 형태의 정책을 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2012-10-17&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Policy1586072492270&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Statement&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Stmt1586072470528&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Effect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Allow&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Principal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3:GetObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Resource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:s3:::OOOOO-test-bucket1/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Condition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;StringLike&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aws:Referer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://OOOOO.kr/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 값을 복사한 후 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책 편집기&lt;/code&gt;로 돌아 와 붙여넣기 한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;저장&lt;/code&gt; 버튼을 선택하면 정책 설정이 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;접근 권한을 다시 설정하기 위하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;권한 &amp;gt; 퍼블릭 액세스 차단&lt;/code&gt; 메뉴로 가 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;새 퍼블릭 버킷 또는 액세스 지점 정책을 통해 부여된 버킷 및 객체에 대한 퍼블릭 액세스 차단&lt;/code&gt;을 활성화 해 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같은 확인 창이 뜨면 &lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt;을 입력하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt; 버튼을 눌러주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 과정이 끝나면 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블랙 액세스 차단&lt;/code&gt; 설정이 아래와 같이 설정 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 정책이 정상적으로 적용되었는지 확인 해 보면 된다.&lt;/p&gt;

&lt;p&gt;나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;flower.png&lt;/code&gt;를 넣어 뒀는데, 해당 이미지에 직접 접근하면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;AccessDenied&lt;/code&gt;가 뜨는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이에, 내가 설정한 도메인에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그를 통해 해당 이미지를 불러오면 정상적으로 이미지가 출력된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이번엔 타인의 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS CLI&lt;/code&gt;를 이용하여 해당 버킷에 접근할 수 있는지 확인 해 보았다.&lt;/p&gt;

&lt;p&gt;역시나 &lt;code class=&quot;highlighter-rouge&quot;&gt;AccessDenied&lt;/code&gt;가 나오므로, 설정이 정상적으로 적용된 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/s3_referer/bucket_referer_setting_15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Apr 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Secure Coding] SonarQube 설치 및 사용법</title>
        <link>/development/secure%20coding/2020/03/29/sonarqube-install_and_testing.html</link>
        <guid isPermaLink="true">/development/secure%20coding/2020/03/29/sonarqube-install_and_testing.html</guid>
        <description>&lt;p&gt;많은 기업들에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Secure Coding&lt;/code&gt;을 위해 정적 코드 분석 툴을 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SonarQube&lt;/code&gt;는 그 중 하나인데, 커뮤니티 버전이 있어 무료로 사용할 수 있기에 설치 해 테스트 해 보았다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SonarQube&lt;/code&gt;는 아래 사이트에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;https://www.sonarqube.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 사이트에 접속 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download&lt;/code&gt;를 누르면 아래의 페이지로 이동한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download Community Edition&lt;/code&gt;을 선택하면 무료로 다운받을 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;만약 JDK가 설치되어 있지 않다면, JDK를 설치 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;JDK는 아래의 사이트에서 다운받을 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technologies/javase-downloads.html&quot;&gt;https://www.oracle.com/java/technologies/javase-downloads.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;다운로드 완료 후 압축을 풀면 아래와 같은 파일 목록을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;이 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;conf&lt;/code&gt; 폴더를 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;conf&lt;/code&gt; 폴더에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;SonarQube&lt;/code&gt;를 사용하기 위한 기본 설정파일들이 있다.&lt;/p&gt;

&lt;p&gt;두 파일 모두 그냥 놔둬도 돌아간다고 하는데, 나는 그대로 사용하면 오류가 나서 &lt;code class=&quot;highlighter-rouge&quot;&gt;wrapper.conf&lt;/code&gt;를 살짝 수정 해 주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;해당 파일을 선택하면 맨 위의 코드가 아래와 같다.&lt;/p&gt;

&lt;h4 id=&quot;before&quot;&gt;Before&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Path to JVM executable. By default it must be available in PATH.
# Can be an absolute path, for example:
# wrapper.java.command=/path/to/my/jdk/bin/java
wrapper.java.command=java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 코드에서 3번째 줄의 주석을 풀고 현재 내 PC에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt;가 설치 된 경로를 입력하고 4번째 줄을 주석처리 한다.&lt;/p&gt;

&lt;h4 id=&quot;after&quot;&gt;After&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Path to JVM executable. By default it must be available in PATH.
# Can be an absolute path, for example:
wrapper.java.command=C:\Program Files\Java\jdk-14\bin/java
# wrapper.java.command=java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 결과는 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt; 폴더로 가 &lt;code class=&quot;highlighter-rouge&quot;&gt;StartSonar&lt;/code&gt;를 더블클릭 해 실행시켜 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StartSonar&lt;/code&gt;를 누르면 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; 창이 뜰 것이다.&lt;/p&gt;

&lt;p&gt;그러면 웹 브라우저를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9000&lt;/code&gt;으로 이동하면 아래와 같은 페이지를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;조금 기다리면 아래와 같은 메인 페이지가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Log in&lt;/code&gt; 버튼을 눌러 로그인 할 수 있는데, 기본 아이디와 패스워드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;admin/admin&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;로그인을 하면 아래와 같은 대쉬보드를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;소스코드 진단을 실제로 해 보기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create new project&lt;/code&gt;를 선택했다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Project key&lt;/code&gt;에 내가 입력하고 싶은 프로젝트 이름을 선택하면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Display name&lt;/code&gt;은 자동으로 입력됬다. (변경도 가능하다)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;Set Up&lt;/code&gt;을 누르면 아래와 같은 페이지로 이동하는데, 여기에서 만약에 token 값이 없다면 새로 생성하고, 기존에 생성 된 토큰이 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Use existing token&lt;/code&gt;을 선택 해 기존의 토큰 값을 입력 해 주면 된다.&lt;/p&gt;

&lt;p&gt;나는 처음 실행하는거라 토큰 값이 없기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Generate a token&lt;/code&gt;을 선택하고 값을 입력한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Generate&lt;/code&gt;를 눌러 주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Token 명 : Token 값&lt;/code&gt; 형태로 값이 출력된다.&lt;/p&gt;

&lt;p&gt;이 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Continue&lt;/code&gt;를 눌러 다음 단계를 진행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음 단계에서는 정적 코드 분석을 진행 할 코드의 메인 언어와 내 OS를 선택해야 한다.&lt;/p&gt;

&lt;p&gt;내가 테스트 하기 위해 사용 한 코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Load of SQL Injection&lt;/code&gt;의 가장 첫 문제인 &lt;code class=&quot;highlighter-rouge&quot;&gt;gremlin&lt;/code&gt;이기 때문에 언어는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Other (JS, TS, Go, Python, PHP, ...)&lt;/code&gt;을, 환경은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;를 선택했다.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./config.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;login_chk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/prob|_|\.|\(\)/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Hack ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do not try to attack another table, database!&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/prob|_|\.|\(\)/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Hack ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;select id from prob_gremlin where id='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' and pw='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;hr&amp;gt;query : &amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mysqli_fetch_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mysqli_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gremlin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;highlight_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 아래를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download and unzip the Scanner for Windows&lt;/code&gt;라고 뜨는데, 여기에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Download&lt;/code&gt; 버튼을 눌러준다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Download&lt;/code&gt; 아래의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Execute the Scanner from your computer&lt;/code&gt;에 있는 명령어는 일단 잘 복사 해 둔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Download&lt;/code&gt;를 선택하면 아래와 같은 페이지로 이동한다.&lt;/p&gt;

&lt;p&gt;정적 코드 진단을 하기 위한 Scanner를 다운로드 하는 링크이다.&lt;/p&gt;

&lt;p&gt;여기에서 내 환경에 맞는 다운로드 링크를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Scanner&lt;/code&gt;를 다운받아 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일이 다운로드 되면 압축을 풀어주고, 해당 링크를 환경 변수에 등록 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;시작 &amp;gt; 시스템 환경 변수 편집 &amp;gt; 고급 &amp;gt; 환경 변수&lt;/code&gt;를 선택 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 후 압축 해제 한 &lt;code class=&quot;highlighter-rouge&quot;&gt;sonar-scanner&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt; 폴더를 환경 변수에 등록 해 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;환경 변수에 등록을 완료 했다면 이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; 창을 열어 진단 할 소스코드 있는 경로로 이동하고, 앞서 복사 해 뒀던 &lt;code class=&quot;highlighter-rouge&quot;&gt;Execute the Scanner from your computer&lt;/code&gt;의 명령어를 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt;에 입력 해 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;명령어 실행 후 코드의 양에 따라 조금 시간이 지난 후 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXECUTION SUCCESS&lt;/code&gt;가 뜨면 진단이 끝난 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9000&lt;/code&gt;으로 가 보면 아래와 같이 진단 결과가 나와 있는 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데 분명히 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;SQL Injection&lt;/code&gt;이 가능 한 &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt; 코드를 업로드 했는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;Vulnerabilities&lt;/code&gt;가 0개로 A등급이 나왔고, 약간 마이너 한 버그로 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;braces&lt;/code&gt; 즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;를 사용하지 않았다는 리포트를 얻을 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/development/secure/sonarqube/sonar_install_21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Community&lt;/code&gt; 버전이라 그런건지는 모르겠지만, 간단한 점검 용으로는 사용 하더라도 진짜 서비스 해야 하는 곳에서는 사용하지 않을 것 같다…ㅎ&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Mar 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[Vmware] EFI Network / Timeout Error</title>
        <link>/error/windows/2020/03/20/vmware-time_out.html</link>
        <guid isPermaLink="true">/error/windows/2020/03/20/vmware-time_out.html</guid>
        <description>&lt;p&gt;얼마 전 컴퓨터를 포맷했는데, 포맷 한 뒤로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vmware&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;를 설치하려고 하면 자꾸 &lt;code class=&quot;highlighter-rouge&quot;&gt;Time out&lt;/code&gt; 오류가 난다.&lt;/p&gt;

&lt;p&gt;해당 오류 해결 방법은 아래와 같다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;일단 오류 상황은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어떨 때는 첫 번째 사진과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;EFI Network&lt;/code&gt;라고 뜨며 &lt;code class=&quot;highlighter-rouge&quot;&gt;Time out&lt;/code&gt;이 나오고, 또 어떨 때는 두 번째 사진과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Press any key to boot from CD or DVD&lt;/code&gt;라는 오류가 나온다.&lt;/p&gt;

&lt;p&gt;일반적으로 두 번째 오류가 나오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Setting&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;CD/DVD(SATA)&lt;/code&gt; 탭에 &lt;code class=&quot;highlighter-rouge&quot;&gt;ISO&lt;/code&gt; 파일은 안 넣어 준 경우일텐데, 나는 아래와 같이 정확하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows 10&lt;/code&gt;용 &lt;code class=&quot;highlighter-rouge&quot;&gt;ISO&lt;/code&gt; 파일의 경로를 넣어 준 상태였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_03.png&quot; alt=&quot;&quot; width=&quot;75%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 오류의 해결 방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VM 종료 후 해당 VM 마우스 오른쪽 버튼 &amp;gt; Settings &amp;gt; 상단 Options 탭으로 이동 &amp;gt; 아래의 Advanced 메뉴 &amp;gt; Firmware type&lt;/code&gt;을 확인 해 보면 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;UEFI&lt;/code&gt;라고 설정되어 있을 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_04.png&quot; alt=&quot;&quot; width=&quot;75%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 이 설정을 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;BIOS&lt;/code&gt;로 변경하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt;를 클릭 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_05.png&quot; alt=&quot;&quot; width=&quot;75%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 다시 부팅을 해 보면 정상적으로 되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/error/vm/timeout/vm_timeout_06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Mar 2020 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[AWS S3] AWS CLI로 S3 파일 업로드 및 다운로드 하기</title>
        <link>/pentesting/cloud/2020/03/07/aws_cli.html</link>
        <guid isPermaLink="true">/pentesting/cloud/2020/03/07/aws_cli.html</guid>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS CLI(Command Line Interface)&lt;/code&gt;가 있어 로컬에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3 bucket&lt;/code&gt;를 동기화하여 사용할 수 있게 해 준다.&lt;/p&gt;

&lt;p&gt;또한 리눅스 명령어와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls, rm, cp&lt;/code&gt; 등의 명령어를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;기본적인 사용방법은 다음과 같다.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;1-aws-cli-설치&quot;&gt;1. AWS CLI 설치&lt;/h3&gt;

&lt;p&gt;나는 주로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;를 사용 해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;를 기준으로 설명한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Windows&lt;/code&gt;에서 사용하고 싶다면 설치 방법은 아래와 같다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/install-windows.html&quot;&gt;Windows AWS CLI 설치&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;에서는 아래의 명령어로 설치할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# apt install -y awscli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 아래와 같은 오류 발생 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;apt update&lt;/code&gt; 후 설치하면 정상적으로 진행된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;E: Package 'awscli' has no installation candidate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료되면 기본 설정을 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;설정하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;aws configure&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws configure
AWS Access Key ID [None]:
AWS Secret Access Key [None]: 
Default region name [None]: 
Default output format [None]:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫 두 항목(&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Access Key ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Secret Access Key&lt;/code&gt;)는 AWS 홈페이지에서 생성할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://aws.amazon.com/ko/&lt;/code&gt;에서 로그인 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS 소개 &amp;gt; 내 보안 자격 증명 &amp;gt; 액세스 키(액세스 키 ID 및 비밀 액세스 키) &amp;gt; 새 액세스 키 만들기&lt;/code&gt;를 선택 해 새로 키를 생성한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/awscli/awscli_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pen-testing/cloud/awscli/awscli_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 위와 같이 키 값을 확인할 수 있는데, 이를 복사 해 각각 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Access Key ID&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Secret Access Key&lt;/code&gt;에 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;또한 세번째 값인 &lt;code class=&quot;highlighter-rouge&quot;&gt;Default region name&lt;/code&gt;에는 내가 생성 한 버킷의 &lt;code class=&quot;highlighter-rouge&quot;&gt;region&lt;/code&gt;을 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;서울&lt;/code&gt;의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ap-northeast-2&lt;/code&gt;를 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;마지막 값인 &lt;code class=&quot;highlighter-rouge&quot;&gt;Default output format&lt;/code&gt;은 따로 입력하지 않아도 된다.&lt;/p&gt;

&lt;p&gt;정상적으로 설정이 완료 됬는지는 아래의 명령어를 통해 확인할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;현재 계정에 생성 된 bucket 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 계정의 bucket 내 파일 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 ls s3://[bucketname]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;정상적으로 설정이 완료 됬으며, &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;이 존재 할 경우 출력되는 예시는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 ls
2020-02-06 02:29:29 [bucketname]                                                                                                         
# aws s3 ls s3://[bucketname]
2020-02-06 02:32:37      26075 test.png                    
2020-02-06 03:01:22         12 test.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-기본-사용법&quot;&gt;2. 기본 사용법&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS CLI&lt;/code&gt;를 통한 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; 사용 방법은 아래와 같다.&lt;/p&gt;

&lt;h4 id=&quot;1-버킷-생성하기&quot;&gt;1) 버킷 생성하기&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 mb s3://[bucketname]
make_bucket: [bucketname]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이때, &lt;code class=&quot;highlighter-rouge&quot;&gt;mb&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Make Bucket&lt;/code&gt;라고 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt;의 이름은 AWS 전체에서 고유한 이름이어야 한다.&lt;/p&gt;

&lt;h4 id=&quot;2-목록-확인&quot;&gt;2) 목록 확인&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt; 목록을 확인하려면 아래와 같다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 ls
2020-02-06 02:29:29 [bucketname]  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;bucket&lt;/code&gt; 내의 파일을 확인하고 싶다면 아래와 같이 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 ls s3://[bucketname]
2020-02-06 02:32:37      26075 test.png                    
2020-02-06 03:01:22         12 test.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-파일-업로드&quot;&gt;3) 파일 업로드&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 cp [localfilepath] s3://[bucketname]/[filename]
upload: [localfilepath] to s3://[bucketname]/[filename]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 때, 업로드 하는 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;public 읽기&lt;/code&gt; 권한을 부여하고 싶다면 뒤에 &lt;code class=&quot;highlighter-rouge&quot;&gt;--acl public-read&lt;/code&gt;를 추가 해 주면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 cp [localfilepath] s3://[bucketname]/[filename] --acl public-read
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-파일-다운로드&quot;&gt;4) 파일 다운로드&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 cp s3://[bucketname]/[filename] [localfilepath]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일을 업로드 할 때와 반대로 사용하면 된다.&lt;/p&gt;

&lt;h4 id=&quot;5-파일-삭제&quot;&gt;5) 파일 삭제&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# aws s3 rm s3://[bucketname]/[filename]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 07 Mar 2020 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
